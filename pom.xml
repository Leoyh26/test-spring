<?xml version='1.0' encoding='UTF-8'?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

    <groupId>com.leo.study</groupId>
    <artifactId>test-spring</artifactId>
    <packaging>war</packaging>
    <version>1.0.0-SNAPSHOT</version>

  <properties>
      <java.version>1.8</java.version>
      <spring.version>4.2.8.RELEASE</spring.version>
      <aspectj.version>1.8.10</aspectj.version>
      <powermock.version>1.6.6</powermock.version>
      <junit.version>4.13.1</junit.version>
      <fastjson.version>1.2.70</fastjson.version>
      <orika.version>1.5.2</orika.version>
      <commons-collections4.version>4.3</commons-collections4.version>
      <guava.version>19.0</guava.version>
      <zkclient.version>2.1.1</zkclient.version>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <!-- 是否跳过单元测试 -->
      <maven.surefire.skip>false</maven.surefire.skip>
      <maven.surefire.testFailureIgnore>true</maven.surefire.testFailureIgnore>
      <argLine>-Xms512m -Xmx1024m</argLine>
      <!-- 是否跳过单元测试覆盖率统计 -->
      <sonar.skip>false</sonar.skip>
      <!-- 如果你想过滤掉一些自动生成的代码，比如：mybatis entity/mapper，请将下面打开 -->
      <!--
      <sonar.exclusions>
        src/main/java/com/daojia/ptht/order/repository/pojo/**/*,
        src/main/java/com/daojia/ptht/order/repository/mybatismapper/**/*
      </sonar.exclusions>
      -->
  </properties>

  <dependencies>
      <!--guava-->
      <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>${guava.version}</version>
      </dependency>
      <!--guava.retrying-->
      <dependency>
          <groupId>com.github.rholder</groupId>
          <artifactId>guava-retrying</artifactId>
          <version>2.0.0</version>
      </dependency>
      <!-- spring -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
          <version>${spring.version}</version>
          <exclusions>
              <exclusion>
                  <artifactId>commons-logging</artifactId>
                  <groupId>commons-logging</groupId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjrt</artifactId>
          <version>${aspectj.version}</version>
      </dependency>
      <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjweaver</artifactId>
          <version>${aspectj.version}</version>
      </dependency>
      <!-- powermock -->
      <dependency>
          <groupId>org.powermock</groupId>
          <artifactId>powermock-module-junit4</artifactId>
          <version>${powermock.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.powermock</groupId>
          <artifactId>powermock-api-mockito</artifactId>
          <version>${powermock.version}</version>
          <scope>test</scope>
      </dependency>
      <!--junit-->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${junit.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>org.jacoco.agent</artifactId>
          <classifier>runtime</classifier>
          <version>0.7.7.201606060606</version>
          <scope>test</scope>
      </dependency>
      <!--fastjson-->
      <dependency>
          <groupId>com.alibaba</groupId>
          <artifactId>fastjson</artifactId>
          <version>${fastjson.version}</version>
      </dependency>
      <!--orika-->
      <dependency>
          <groupId>ma.glasnost.orika</groupId>
          <artifactId>orika-core</artifactId>
          <version>${orika.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-collections4</artifactId>
          <version>${commons-collections4.version}</version>
      </dependency>
      <dependency>
          <groupId>com.github.adyliu</groupId>
          <artifactId>zkclient</artifactId>
          <version>${zkclient.version}</version>
      </dependency>
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>4.0.1</version>
      </dependency>
  </dependencies>

  <build>
      <finalName>test-spring</finalName>
      <plugins>
          <!-- 源码插件，打包时生成源码包 -->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-source-plugin</artifactId>
              <version>2.4</version>
              <configuration>
                  <attach>true</attach>
              </configuration>
              <executions>
                  <execution>
                      <phase>compile</phase>
                      <goals>
                          <goal>jar</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>

          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>3.5.1</version>
              <configuration>
                  <source>${java.version}</source>
                  <target>${java.version}</target>
                  <encoding>${project.build.sourceEncoding}</encoding>
                  <verbose>true</verbose>
                  <compilerArguments>
                      <sourcepath>${project.basedir}/src/main/java</sourcepath>
                  </compilerArguments>
              </configuration>
          </plugin>

          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jar-plugin</artifactId>
              <version>2.3.1</version>
              <configuration>
                  <outputDirectory>${basedir}/target/jar</outputDirectory>
                  <excludes>
                      <exclude>config/**</exclude>
                      <exclude>config_offline/**</exclude>
                      <exclude>config_online/**</exclude>
                  </excludes>
              </configuration>
          </plugin>

          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <version>2.8</version>
              <executions>
                  <execution>
                      <id>copy-dependencies</id>
                      <phase>package</phase>
                      <goals>
                          <goal>copy-dependencies</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>${basedir}/target/jar/lib</outputDirectory>
                          <overWriteReleases>true</overWriteReleases>
                          <overWriteSnapshots>true</overWriteSnapshots>
                          <overWriteIfNewer>true</overWriteIfNewer>
                      </configuration>
                  </execution>
              </executions>
          </plugin>

          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-war-plugin</artifactId>
              <version>2.3</version>
              <configuration>
                  <failOnMissingWebXml>false</failOnMissingWebXml>
              </configuration>
          </plugin>

          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>3.5.1</version>
              <configuration>
                  <source>${java.version}</source>
                  <target>${java.version}</target>
                  <encoding>${project.build.sourceEncoding}</encoding>
              </configuration>
          </plugin>

          <plugin>
              <!-- http://wiki.eclipse.org/Jetty/Feature/Jetty_Maven_Plugin -->
              <groupId>org.eclipse.jetty</groupId>
              <artifactId>jetty-maven-plugin</artifactId>
              <version>9.4.0.M0</version>
              <!-- <version>9.3.9.M1</version> -->
              <configuration>
                  <stopPort>9966</stopPort>
                  <stopKey>foo</stopKey>
                  <scanIntervalSeconds>10</scanIntervalSeconds>
                  <httpConnector>
                      <port>8080</port>
                  </httpConnector>
                  <webAppConfig>
                      <contextPath>/</contextPath>
                  </webAppConfig>
              </configuration>
          </plugin>

          <!-- 单元测试，如果之前项目中有配置的surefire插件，一定要替换成下面的形式 -->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>2.19.1</version>
              <configuration>
                  <skip>${maven.surefire.skip}</skip>
                  <testFailureIgnore>${maven.surefire.testFailureIgnore}</testFailureIgnore>
                  <!-- 添加下面两行，解决单元测试时wf、scf抛错 -->
                  <useManifestOnlyJar>false</useManifestOnlyJar>
                  <useSystemClassLoader>true</useSystemClassLoader>
              </configuration>
          </plugin>
      </plugins>
  </build>
</project>
